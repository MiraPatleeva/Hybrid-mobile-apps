import * as React from 'react';
import Form from './components/Form';
import CardList from './components/CardList';
import {
  StyleSheet,
  Text,
  View,
  TextInput,
  ScrollView,
  TouchableOpacity,
} from 'react-native';

class App extends React.Component {
  state = {
    profiles: [],
  };
  addNewProfile = (profileData) => {
    this.setState((prevState) => ({
      profiles: [...prevState.profiles, profileData],
    }));
  };
  render() {
    return (
      <View style={styles.container}>
        <View className="header">{this.props.title}</View>
        <Form onSubmit={this.addNewProfile} />
        <CardList profiles={this.state.profiles} />
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    padding: 60,
  },
});

export default App;


_____________________________________________________

import React from 'react';
import { StyleSheet, Text, View, Image } from 'react-native';

export default function Card(props) {
  return (
    <View style={styles.card}>
      <Image source={{uri: props.avatar_url}} style={{ width: 35, height: 35 }} />
      <View>
        <Text>{props.name}</Text>
        <Text>{props.company}</Text>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  card: {
    paddingTop: 40,
  }
});

___________________________________________________________________

import React from 'react';
import Card from './Card';
import { View } from 'react-native';

export default function CardList(props) {
  return (
    <View>
      {props.profiles.map((profile) => (
        <Card key={profile.id} {...profile} />
      ))}
    </View>
  );
}

_____________________________________________________

import React, { useState } from 'react';
import {
  StyleSheet,
  Text,
  View,
  TextInput,
  ScrollView,
  TouchableOpacity,
  Button,
  SafeAreaView,
} from 'react-native';
import axios from 'axios';

const Form = (props) => {
  const [username, setUsername] = useState('');

  let handleSubmit = async (username) => {
    try {
      const resp = await axios.get(`https://api.github.com/users/${username}`);
      props.onSubmit(resp.data);
      setUsername('');
    } catch (ex) {
      alert(ex);
    }
  };

  return (
    <SafeAreaView>
      <TextInput
        type="text"
        value={username}
        onChangeText={(username) => setUsername(username)}
        placeholder="GitHub username"
        ref={input => { this.textInput = input }}
        required
      />
      <Button title="Add card" onPress={() => handleSubmit(username)} />
    </SafeAreaView>
  );
};

export default Form;
